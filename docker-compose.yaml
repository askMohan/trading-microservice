version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq_ms
    hostname: rabbitmq_ms
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      retries: 10
      start_period: 30s
    networks:
      - tradin_microservices

  order_management_service:
    container_name: order_management
    build:
      context: ./order_management
      dockerfile: Dockerfile
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - ./order_management:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - 8000:8000
    networks:
      - tradin_microservices

  trade_management_service:
    container_name: trade_management
    build:
      context: ./trade_management
      dockerfile: Dockerfile
    command: python3 manage.py runserver 0.0.0.0:8001
    volumes:
      - ./trade_management:/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - 8001:8001
    networks:
      - tradin_microservices

  trade_management_service_consumer:
    build:
      context: ./trade_management
      dockerfile: Dockerfile
    command: python3 order_consumer.py
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - ./trade_management:/app
    networks:
      - tradin_microservices

networks:
  tradin_microservices:
    driver: bridge